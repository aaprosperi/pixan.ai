// Test endpoint to verify the fix works
export default function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    // Simulate the fixed generator response
    const mockResponse = {
      id: 'test123',
      name: 'Test Calculator',
      description: 'A simple test calculator to verify the system works',
      timestamp: new Date().toISOString(),
      code: `function TestCalculator() {
        const [result, setResult] = React.useState(0);
        
        return (
          <div className="max-w-md mx-auto bg-white p-6 rounded-lg shadow-lg">
            <h1 className="text-2xl font-bold mb-4">Test Calculator</h1>
            <div className="text-3xl font-mono mb-4">{result}</div>
            <div className="grid grid-cols-2 gap-2">
              <button onClick={() => setResult(result + 1)} className="bg-blue-500 text-white p-2 rounded">+1</button>
              <button onClick={() => setResult(result - 1)} className="bg-red-500 text-white p-2 rounded">-1</button>
              <button onClick={() => setResult(0)} className="bg-gray-500 text-white p-2 rounded col-span-2">Reset</button>
            </div>
            <p className="text-sm text-gray-500 mt-4">âœ¨ Generated by Pixan.ai</p>
          </div>
        );
      }`,
      cost: '$0.01',
      tokensUsed: 1000,
      success: true
    };

    // No filesystem operations - just return JSON
    res.status(200).json(mockResponse);
    
  } catch (error) {
    res.status(500).json({ 
      error: 'Test failed', 
      details: error.message 
    });
  }
}